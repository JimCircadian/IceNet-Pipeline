#!/bin/bash
#SBATCH --output={{ run.dir }}/predict.%j.%N.{{ run.seed }}.out
#SBATCH --error={{ run.dir }}/predict.%j.%N.{{ run.seed }}.err
#SBATCH --chdir={{ run.dir }}
{% if run.email != "someone@example.com" %}
#SBATCH --mail-type=begin,end,fail,requeue
#SBATCH --mail-user={{ run.email }}
{% endif %}
#SBATCH --time={{ run.length }}
#SBATCH --job-name={{ run.id }}
#SBATCH --nodes={{ run.nodes }}
{% if run.cluster == "gpu" %}#SBATCH --gres=gpu:1{% endif %}
#SBATCH --partition={{ run.cluster }}
#SBATCH --account={{ run.cluster }}
#SBATCH --cpus-per-task={{ run.ntasks }}
#SBATCH --mem={{ run.mem }}
{% if run.nodelist %}#SBATCH --nodelist={{ run.nodelist }}{% endif %}

. ENVS

cd {{ run.dir }}

{% for dest in run.symlinks %}ln -s {{ dest }}
{% endfor %}

echo "START `date +%F\ %T`"

source $PREP_SCRIPT
conda activate $ICENET_CONDA

cat <<EOF >cmd.sh
icenet_predict -v -n {{ run.arg_filter_factor }} $PREDICT_STATIC_ARGS \{% if run.arg_testset == "true" %}
    -t \{% endif %}{% if run.arg_ident %}
    -i {{ run.arg_ident }} \{% endif %}
    {{ run.arg_dataset }} {{ run.arg_network }} {{ run.name }} \
    {{ run.seed }} ../predict_dates.csv

EOF

chmod +x cmd.sh
./cmd.sh

echo "FINISH `date +%F\ %T`"
