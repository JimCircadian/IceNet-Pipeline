#!/bin/bash
#SBATCH --output={{ run.dir }}/train.%j.%N.{{ run.seed }}.out
#SBATCH --error={{ run.dir }}/train.%j.%N.{{ run.seed }}.err
#SBATCH --chdir={{ run.dir }}
{% if run.email != "someone@example.com" %}
#SBATCH --mail-type=begin,end,fail,requeue
#SBATCH --mail-user={{ run.email }}
{% endif %}
#SBATCH --time={{ run.length }}
#SBATCH --job-name={{ run.id }}
#SBATCH --nodes={{ run.nodes }}
#SBATCH --gres=gpu:{{ run.gpus }}
#SBATCH --partition={{ run.cluster }}
#SBATCH --account={{ run.cluster }}
#SBATCH --cpus-per-task={{ run.ntasks }}
#SBATCH --mem={{ run.mem }}
{% if run.nodelist %}#SBATCH --nodelist={{ run.nodelist }}{% endif %}

cd {{ run.dir }}

{% for dest in run.symlinks %}
    {%- if '*' in dest %}
for FILE in $( ls {{ dest }} ); do
    ln -s $FILE;
done
    {% else %}
ln -s {{ dest }}
    {% endif -%}
{% endfor %}


. ENVS

echo "START `date +%F\ %T`"

source $PREP_SCRIPT
conda activate $ICENET_CONDA

# TODO: run.arg_filter_factor comes from ENVS now
COMMAND="icenet_train -v {{ run.arg_dataset }} {{ run.name }} {{ run.seed }} $TRAIN_STATIC_ARGS -b {{ run.arg_batch }} -e {{ run.arg_epochs }} -m -qs {{ run.arg_queue }} -w {{ run.ntasks }} -s {{ run.arg_strategy }} {% if run.arg_preload %} -p results/networks/{{ run.name }}/{{ run.name }}.network_{{ run.arg_preload }}.{{ run.seed }}.h5 {% endif %}{% if run.arg_filter_factor %} -n {{ run.arg_filter_factor }}{% endif %}"

echo "Running $COMMAND"
eval $COMMAND

echo "FINISH `date +%F\ %T`"
